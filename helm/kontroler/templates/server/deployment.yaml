{{ if .Values.server.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.server.name }}
  labels:
    {{- include "kontroler.labels" . | nindent 4 }}
spec:
  {{- if not .Values.server.autoscaling.enabled }}
  replicas: {{ .Values.server.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "kontroler.server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.server.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kontroler.server.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.server.serviceAccount.name }}
      securityContext:
        {{- toYaml .Values.server.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Values.server.name }}-kontroler-server
          securityContext:
            {{- toYaml .Values.server.securityContext | nindent 12 }}
          image: {{ .Values.server.image }}
          imagePullPolicy: {{ .Values.server.imagePullPolicy }}
          env:
          - name: DB_NAME
            value: {{ .Values.db.name }}
          - name: DB_USER
            value: {{ .Values.server.db.user }}
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.server.db.password.secret }}
                key:  {{ .Values.server.db.password.key }}
          - name: JWT_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Values.server.jwt.secret }}
                key:  {{ .Values.server.jwt.key }}
          - name: CORS_UI_ADDRESS
            value: {{ .Values.server.uiAddress }}
          - name: DB_ENDPOINT
            value: {{ .Values.db.endpoint }}
          - name: AUDIT_LOGS
            value: {{ .Values.server.auditLogs | quote }}
          - name: MTLS
            value: {{ .Values.server.mtls.enabled | quote }}
          - name: INSECURE
            value: {{ .Values.server.mtls.insecure | quote }}
          ports:
            - name: http
              containerPort: {{ .Values.server.service.port }}
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.server.resources | nindent 12 }}
          volumeMounts:
            {{ if .Values.server.mtls.enabled }}
            - name: mtls-ca-cert-volume
              mountPath: /ca.crt
              subPath: ca.crt
            - name: mtls-cert-volume
              mountPath: /tls.crt
              subPath: tls.crt
            - name: mtls-key-volume
              mountPath: /tls.key
              subPath: tls.key
            {{ end }}
      volumes:
        {{ if .Values.server.mtls.enabled }}
        - name: mtls-ca-cert-volume
          secret:
            secretName: {{ .Values.server.mtls.certs.caCertSecretName }}
        - name: mtls-cert-volume
          secret:
            secretName: {{ .Values.server.mtls.certs.certSecretName }}
        - name: mtls-key-volume
          secret:
            secretName: {{ .Values.server.mtls.certs.keySecretName }}
        {{ end }}
      {{- with .Values.server.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{ end }}